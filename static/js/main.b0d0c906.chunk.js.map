{"version":3,"sources":["components/SideDrawer/DrawerToggleButton.js","components/Search/Search.jsx","components/Toolbar/Toolbar.jsx","components/SideDrawer/SideDrawer.jsx","components/Backdrop/Backdrop.jsx","components/PopularSearches/PopularSearches.jsx","components/Products/SortingModeSelect.jsx","components/Products/ViewTypeSelect.jsx","components/Products/Settings.jsx","components/Products/ProductCard.jsx","components/Products/ProductsBlock.jsx","App.jsx","serviceWorker.js","index.js"],"names":["drawerToggleButton","props","react_default","a","createElement","className","onClick","click","Search","_ref","categories","style","width","concat","class","data-style","title","data-size","disabled","selected","value","type","id","placeholder","toolbar","drawerClickHandler","SideDrawer_DrawerToggleButton","href","components_Search_Search","sideDrawer","drawerClasses","show","backdrop","role","PopularSearches","searches","slice","map","search","SortingModeSelect","availableModes","mode","ViewTypeSelect","availableTypes","Settings","Products_SortingModeSelect","Products_ViewTypeSelect","ProductCard","currentBid","itemName","timeUntilBidEnd","src","alt","styles","infoBlock","fullWidth","ProductsBlock","products","i","push","components_Products_ProductCard","Products_Settings","App","state","sideDrawerOpen","drawerToggleClickHandler","_this","setState","prevState","backdropClickHandler","this","Backdrop_Backdrop","height","Toolbar_Toolbar","SideDrawer_SideDrawer","marginTop","components_PopularSearches_PopularSearches","Products_ProductsBlock","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b0d0c906.chunk.js","sourcesContent":["import React from \"react\";\n\nimport \"./DrawerToggleButton.css\";\n\nconst drawerToggleButton = props => (\n  <button className=\"toggle-button\" onClick={props.click}>\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n    <div className=\"toggle-button__line\" />\n  </button>\n);\n\nexport default drawerToggleButton;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Search.css';\n\nconst Search = ({ categories }) => (\n  <form className=\"form-inline\">\n    <div className=\"input-group input-group-lg\" style={{ width: `${100}%` }}>\n      {/* <select\n        className=\"form-control rounded-0\"\n        id=\"categories\"\n        style={{ width: `${10}%` }}\n      >\n        <option selected>All</option>\n        {categories.map(category => (\n          <option>{category}</option>\n        ))}\n      </select> */}\n      <select\n        class=\"selectpicker\"\n        data-style=\"btn btn-primary btn-round\"\n        title=\"Single Select\"\n        data-size=\"7\"\n      >\n        <option disabled selected>\n          Choose city\n        </option>\n        <option value=\"2\">Foobar</option>\n        <option value=\"3\">Is great</option>\n      </select>\n      <input\n        type=\"text\"\n        className=\"form-control rounded-0\"\n        id=\"search-query\"\n        placeholder=\"Search...\"\n        style={{ width: `${50}%` }}\n      />\n      <button\n        type=\"button\"\n        className=\"btn btn-lg btn-primary rounded-0 border-right\"\n      >\n        Search\n      </button>\n    </div>\n  </form>\n);\n\nSearch.propTypes = {\n  categories: PropTypes.arrayOf(PropTypes.string).isRequired\n};\n\nexport default Search;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport DrawerToggleButton from '../SideDrawer/DrawerToggleButton';\nimport Search from '../Search/Search';\nimport './Toolbar.css';\n\nconst toolbar = ({ drawerClickHandler }) => (\n  <header className=\"toolbar\">\n    <nav className=\"toolbar__navigation\">\n      <div className=\"toolbar__toggle-button\">\n        <DrawerToggleButton click={drawerClickHandler} />\n      </div>\n      <div className=\"toolbar__logo\">\n        <a href=\"/\">LOGO</a>\n      </div>\n      {/* <div className=\"spacer\" /> */}\n      <Search categories={['cat1', 'cat2']} />\n      <div className=\"toolbar_navigation-items\">\n        <ul>\n          <li>\n            <a href=\"/\">Login | Register</a>\n          </li>\n          <li>\n            <a href=\"/\">Current Bids</a>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n);\n\ntoolbar.propTypes = {\n  drawerClickHandler: PropTypes.func.isRequired\n};\n\nexport default toolbar;\n","import React from 'react';\n\nimport PropTypes from 'prop-types';\nimport './SideDrawer.css';\n\nconst sideDrawer = ({ show }) => {\n  let drawerClasses = 'side-drawer';\n  if (show) {\n    drawerClasses = 'side-drawer open';\n  }\n\n  return (\n    <nav className={drawerClasses}>\n      <ul>\n        <li>\n          <a href=\"/\">Login</a>\n        </li>\n        <li>\n          <a href=\"/\">Register</a>\n        </li>\n        <li>\n          <a href=\"/\">Current Bids</a>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nsideDrawer.propTypes = {\n  show: PropTypes.bool.isRequired,\n};\n\nexport default sideDrawer;\n","import React from 'react';\n\nimport './Backdrop.css';\nimport PropTypes from 'prop-types';\n\nconst backdrop = ({ click }) => <div role=\"presentation\" className=\"backdrop\" onClick={click} />;\n\nbackdrop.propTypes = {\n  click: PropTypes.func.isRequired,\n};\n\nexport default backdrop;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PopularSearches = ({ searches }) => (\n  <div className=\"row mt-4\">\n    <div className=\"col\">\n      Popular Searches:\n      {searches.slice(0, 10).map(search => (\n        <a className=\"ml-3\" href={`?search=${search}`}>\n          {search}\n        </a>\n      ))}\n    </div>\n  </div>\n);\n\nPopularSearches.propTypes = {\n  searches: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default PopularSearches;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst SortingModeSelect = ({ availableModes }) => (\n  <div className=\"form-group\">\n    <select className=\"form-control\">\n      {availableModes.map(mode => (\n        <option>{mode}</option>\n      ))}\n    </select>\n  </div>\n);\n\nSortingModeSelect.propTypes = {\n  availableModes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default SortingModeSelect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ViewTypeSelect = ({ availableTypes }) => (\n  <div className=\"form-group mx-sm-3\">\n    <select className=\"form-control\">\n      {availableTypes.map(type => (\n        <option>{type}</option>\n      ))}\n    </select>\n  </div>\n);\n\nViewTypeSelect.propTypes = {\n  availableTypes: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default ViewTypeSelect;\n","import React from 'react';\nimport SortingModeSelect from './SortingModeSelect';\nimport ViewTypeSelect from './ViewTypeSelect';\n\nconst Settings = () => (\n  <form className=\"form-inline\">\n    <SortingModeSelect availableModes={['Recent', 'AnotherMode', 'ThirdMode']} />\n    <ViewTypeSelect availableTypes={['Cards', 'List', 'Compacted']} />\n  </form>\n);\n\nexport default Settings;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ProductCard.css';\n\nconst ProductCard = ({ currentBid, itemName, timeUntilBidEnd }) => (\n  <div className=\"card\">\n    <img className=\"card-img-top\" src=\"https://i1.wp.com/thefrontline.org.uk/wp-content/uploads/2018/10/placeholder.jpg?ssl=1\" alt=\"placeholder\" />\n    <div className=\"card-body\">\n      <h5 className=\"card-title\">{itemName}</h5>\n      <p className=\"card-text\">\n        <span style={styles.infoBlock}>{`Current: ${currentBid} Eur`}</span>\n        <span style={styles.infoBlock}>{`End after: ${timeUntilBidEnd} Hour`}</span>\n      </p>\n\n      <form className=\"form-inline\">\n        <div className=\"input-group\" style={styles.fullWidth}>\n          <input type=\"text\" className=\"form-control rounded-0\" />\n          <a href=\"?=a\" className=\"btn btn-primary rounded-0\">Bid</a>\n        </div>\n      </form>\n    </div>\n  </div>\n);\n\nProductCard.propTypes = {\n  currentBid: PropTypes.number.isRequired,\n  itemName: PropTypes.string.isRequired,\n  timeUntilBidEnd: PropTypes.number.isRequired,\n};\n\nexport default ProductCard;\n","import React from 'react';\nimport Settings from './Settings';\nimport ProductCard from './ProductCard';\n\nconst ProductsBlock = () => {\n  const products = [];\n  for (let i = 0; i < 3; i += 1) {\n    products.push(\n      <div className=\"mt-4 row\">\n        <div className=\"col\">\n          <ProductCard timeUntilBidEnd={10000} itemName=\"test\" currentBid={10.15} />\n        </div>\n        <div className=\"col\">\n          <ProductCard timeUntilBidEnd={10000} itemName=\"test\" currentBid={10.15} />\n        </div>\n        <div className=\"col\">\n          <ProductCard timeUntilBidEnd={10000} itemName=\"test\" currentBid={10.15} />\n        </div>\n      </div>,\n    );\n  }\n\n  return (\n    <div>\n      <Settings />\n      {products}\n    </div>\n  );\n};\n\nexport default ProductsBlock;\n","import React, { Component } from 'react';\n\nimport Toolbar from './components/Toolbar/Toolbar';\nimport SideDrawer from './components/SideDrawer/SideDrawer';\nimport Backdrop from './components/Backdrop/Backdrop';\nimport PopularSearches from './components/PopularSearches/PopularSearches';\nimport ProductsBlock from './components/Products/ProductsBlock';\n\nclass App extends Component {\n  state = {\n    sideDrawerOpen: false\n  };\n\n  drawerToggleClickHandler = () => {\n    this.setState(prevState => ({ sideDrawerOpen: !prevState.sideDrawerOpen }));\n  };\n\n  backdropClickHandler = () => {\n    this.setState({ sideDrawerOpen: false });\n  };\n\n  render() {\n    let backdrop;\n\n    const { sideDrawerOpen } = this.state;\n\n    if (sideDrawerOpen) {\n      backdrop = <Backdrop click={this.backdropClickHandler} />;\n    }\n\n    return (\n      <div style={{ height: '100%' }}>\n        <Toolbar drawerClickHandler={this.drawerToggleClickHandler} />\n        <SideDrawer show={sideDrawerOpen} />\n        {backdrop}\n        <main style={{ marginTop: '80px' }} className=\"container\">\n          <PopularSearches\n            searches={[\n              'popular search 1',\n              'popular search 2',\n              'popular search 3'\n            ]}\n          />\n          <div className=\"row mt-4\">\n            <div className=\"col-md-9\">\n              <ProductsBlock />\n            </div>\n            <div className=\"col-md-3\">Latest Bids | User&apos;s bids</div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n// import 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}